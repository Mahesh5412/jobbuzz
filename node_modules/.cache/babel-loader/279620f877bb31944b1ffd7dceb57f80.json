{"ast":null,"code":"import _slicedToArray from \"/home/cadrac/Desktop/R/jobzbuzz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cadrac/Desktop/R/jobzbuzz/src/components/employee/Dashboard/dashboard.js\";\n//-----------MODIFICATION IN API IS THERE------------------//\n\n/*\n * Purpose : This page is for User Dashboard screen\n * Developers : Narendra, Swathi, Rachana, srikanth\n */\n//importing Hooks from react\nimport React, { useState, useEffect } from \"react\";\nimport Navigator from \"../../Navigation/navigation\"; //Bootstrap for adding styles\n\nimport \"bootstrap/dist/css/bootstrap.css\"; //importing Modal,Backdrop and Fade from @material-ui/core\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from 'moment';\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\"; //images\n\nimport experience from \"../../../images/jobseeker.png\";\nimport salary from \"../../../images/salary.png\";\nimport './dashboard.css'; //Makestyles for adding styles to Modal\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    marginRight: \"350\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderTop: \"10px solid #000\",\n    borderBottom: \"10px solid #000\",\n    borderLeft: \"36px solid #000\",\n    borderRight: \"36px solid #000\",\n    height: \"60%\",\n    width: \"60%\",\n    marginTop: \"14%\",\n    borderRadius: 20,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n})); //DashBoard component\n\nexport default function Dashboard() {\n  const classes = useStyles(); //Hooks for Modal\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modal = _useState4[0],\n        setModal = _useState4[1];\n\n  const _useState5 = useState({\n    userId: localStorage.getItem(\"UserId\"),\n    jobprofile: \"\",\n    salary: \"\",\n    skills: \"\",\n    special: \"\",\n    location: \"\",\n    experience: \"\",\n    startdate: \"\",\n    lastdate: \"\",\n    description: \"\"\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        inp = _useState6[0],\n        setInp = _useState6[1]; //using Hooks for setting DashboardData\n\n\n  const _useState7 = useState(localStorage.getItem(\"jwtUserToken\")),\n        _useState8 = _slicedToArray(_useState7, 2),\n        userId = _useState8[0],\n        setUserId = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        applicationSkills = _useState10[0],\n        setApplicationSkills = _useState10[1]; //Fetching dashboard data\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/employee/applicationSkills\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId\n      })\n    }).then(response => response.json()) //getting json response\n    .then(responseJson => {\n      console.log(responseJson.data);\n      setApplicationSkills(responseJson.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []); // adding skills data in to array\n\n  let skillsData = applicationSkills.map((data, i) => {\n    return data.skills;\n  }); // adding jobData in to array\n\n  let jobData = applicationSkills.map((data, i) => {\n    return data.jobData;\n  });\n  console.log(jobData);\n\n  const handleOpen = val => {\n    console.log(val);\n    var i = jobData.filter(function (data) {\n      return data.applicationId === val;\n    });\n    console.log(i[0]);\n    setModal(i[0]);\n    setOpen(true);\n  }; //function for Closing Modal\n\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //handleSubmit function for submitting data\n\n\n  const handleSubmit = evt => {\n    var data = inp;\n    evt.preventDefault(); //data sent to the server with POST\n\n    fetch(\"http://localhost:4000/employer\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        data\n      })\n    }).then(response => response.json()).then(responseJson => {\n      if (responseJson.result === \"success\") {\n        // success response\n        console.log(responseJson.result);\n      }\n\n      if (responseJson.result === \"failure\") {\n        //failure response\n        console.log(responseJson.result);\n        console.log(responseJson.status);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row mainRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table table-borderless ml-3 table-responsive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    className: \"head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"ID\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Job Profile\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Company\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Application Skills\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Status \"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Action\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, jobData.map((data, i) => {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, i + 1), React.createElement(\"td\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, data.jobProfile), React.createElement(\"td\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, data.company), React.createElement(\"td\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, skillsData.join(',')), React.createElement(\"td\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, data.jobStatus), React.createElement(\"td\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"viewdetailsbtn\",\n      onClick: () => handleOpen(data.applicationId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"View\")));\n  }))), React.createElement(\"div\", {\n    className: \"background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Fade, {\n    in: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, modal.jobProfile, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, modal.company)), React.createElement(\"div\", {\n    className: \"row \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require(\"../../../images/location.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, modal.branch), React.createElement(\"img\", {\n    src: experience,\n    className: \"magleft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"expImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, modal.experienceYearsReq), React.createElement(\"img\", {\n    src: salary,\n    className: \"magleft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"currencyImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, modal.annualSalaryLakhs)), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"startDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"-Start date\"), React.createElement(\"p\", {\n    className: \"postedOn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Posted on\"), React.createElement(\"p\", {\n    className: \"lastDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"Last date\")), React.createElement(\"div\", {\n    className: \"row dateShowing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"magleft startDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, moment(modal.startDate).format('MM-DD-YYYY')), React.createElement(\"p\", {\n    className: \"magleft showPostedOn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, moment(modal.postedOn).format('MM-DD-YYYY')), React.createElement(\"p\", {\n    className: \"magleft showLastDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, moment(modal.lastDate).format('MM-DD-YYYY'))), React.createElement(\"p\", {\n    className: \"modaldesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Description:\", modal.description))))));\n}","map":{"version":3,"sources":["/home/cadrac/Desktop/R/jobzbuzz/src/components/employee/Dashboard/dashboard.js"],"names":["React","useState","useEffect","Navigator","makeStyles","moment","Modal","Backdrop","Fade","experience","salary","useStyles","theme","modal","display","marginRight","alignItems","justifyContent","paper","backgroundColor","palette","background","borderTop","borderBottom","borderLeft","borderRight","height","width","marginTop","borderRadius","boxShadow","shadows","padding","spacing","Dashboard","classes","open","setOpen","setModal","userId","localStorage","getItem","jobprofile","skills","special","location","startdate","lastdate","description","inp","setInp","setUserId","applicationSkills","setApplicationSkills","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","console","log","data","catch","error","skillsData","map","i","jobData","handleOpen","val","filter","applicationId","handleClose","handleSubmit","evt","preventDefault","result","status","jobProfile","company","join","jobStatus","timeout","require","branch","experienceYearsReq","annualSalaryLakhs","startDate","format","postedOn","lastDate"],"mappings":"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","sourcesContent":["//-----------MODIFICATION IN API IS THERE------------------//\n/*\n * Purpose : This page is for User Dashboard screen\n * Developers : Narendra, Swathi, Rachana, srikanth\n */\n\n//importing Hooks from react\nimport React, { useState, useEffect } from \"react\";\nimport Navigator from \"../../Navigation/navigation\"\n//Bootstrap for adding styles\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n//importing Modal,Backdrop and Fade from @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from 'moment';\n\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\n\n//images\nimport experience from \"../../../images/jobseeker.png\";\nimport salary from \"../../../images/salary.png\";\n\nimport './dashboard.css';\n\n//Makestyles for adding styles to Modal\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    marginRight: \"350\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderTop: \"10px solid #000\",\n    borderBottom: \"10px solid #000\",\n    borderLeft: \"36px solid #000\",\n    borderRight: \"36px solid #000\",\n    height: \"60%\",\n    width: \"60%\",\n    marginTop: \"14%\",\n    borderRadius: 20,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\n//DashBoard component\nexport default function Dashboard() {\n  \n  const classes = useStyles();\n\n  //Hooks for Modal\n  const [open, setOpen] = useState(false);\n  const [modal, setModal] = useState([]);\n\n  const [inp, setInp] = useState({\n    userId: localStorage.getItem(\"UserId\"),\n    jobprofile: \"\",\n    salary: \"\",\n    skills: \"\",\n    special: \"\",\n    location: \"\",\n    experience: \"\",\n    startdate: \"\",\n    lastdate: \"\",\n    description: \"\"\n  });\n\n  //using Hooks for setting DashboardData\n  const [userId, setUserId] = useState(localStorage.getItem(\"jwtUserToken\"));\n  const [applicationSkills,setApplicationSkills]= useState([])\n\n  //Fetching dashboard data\n  useEffect(() => {\n\n      fetch(`http://localhost:4000/employee/applicationSkills`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ userId })\n      })\n        .then(response => response.json()) //getting json response\n        .then(responseJson => {\n          console.log(responseJson.data);\n          setApplicationSkills(responseJson.data);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n  }, []);\n\n  // adding skills data in to array\n    let skillsData = applicationSkills.map((data, i) => {\n      return (\n         data.skills\n      )})\n // adding jobData in to array\n      let jobData = applicationSkills.map((data, i) => {\n        return (\n           data.jobData\n        )})\n        \n\n        console.log(jobData)\n\n  const handleOpen = (val) => {\n    console.log(val);\n    var i = jobData.filter(function (data) {\n      return data.applicationId === val\n    });\n    console.log(i[0])\n    setModal(i[0])\n    setOpen(true);\n  };\n\n  //function for Closing Modal\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //handleSubmit function for submitting data\n  const handleSubmit = evt => {\n    var data = inp;\n\n    evt.preventDefault();\n    //data sent to the server with POST\n    fetch(\"http://localhost:4000/employer\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        data\n      })\n    })\n      .then(response => response.json())\n      .then(responseJson => {\n        if (responseJson.result === \"success\") {\n          // success response\n\n          console.log(responseJson.result);\n        }\n        if (responseJson.result === \"failure\") {\n          //failure response\n          console.log(responseJson.result);\n          console.log(responseJson.status);\n        }\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <div>\n      <Navigator />\n      <div className=\"row mainRow\">\n        <table className=\"table table-borderless ml-3 table-responsive\">\n          <thead className=\"head\">\n            <tr>\n              <th>ID</th>\n              <th>Job Profile</th>\n              <th>Company</th>\n              <th>Application Skills</th>\n              <th>Status </th>\n              <th>Action</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {jobData.map((data, i) => {\n              return (\n                <tr>\n                  <td className=\"font-weight-bold\">{i + 1}</td>\n                  <td className=\"font-weight-bold\">{data.jobProfile}</td>\n                  <td className=\"font-weight-bold\">{data.company}</td>\n                  <td className=\"font-weight-bold\">{skillsData.join(',')}</td>\n                  <td className=\"font-weight-bold\">{data.jobStatus}</td>\n                  <td className=\"font-weight-bold\" ><button  className='viewdetailsbtn' onClick={()=> handleOpen(data.applicationId)}>View</button></td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"background\"></div>\n        <Modal\n           aria-labelledby=\"transition-modal-title\"\n           aria-describedby=\"transition-modal-description\"\n           className={classes.modal}\n           open={open}\n           onClose={handleClose}\n           closeAfterTransition\n           BackdropComponent={Backdrop}\n           BackdropProps={{\n             timeout: 500\n           }}\n         >\n           <Fade in={open}>\n           \n             <div className={classes.paper}>\n             <p className=\"font-weight-bold\">{modal.jobProfile}\n               <p >{modal.company}</p>\n              \n              </p>\n               <div className=\"row \">\n                 <img src={require(\"../../../images/location.png\")} />\n                 <p className=\"location\">{modal.branch}</p>\n                 <img src={experience}\n                   className=\"magleft\"\n                 />\n                 <p className=\"expImage\">{modal.experienceYearsReq}</p>\n                 <img src={salary}\n                   className=\"magleft\"\n                 />\n                 <p className=\"currencyImage\">{modal.annualSalaryLakhs}</p>\n               </div>\n               <div className=\"row\">\n                 <p className=\"startDate\">-Start date</p>\n                 <p className=\"postedOn\">Posted on</p>\n                 <p className=\"lastDate\">Last date</p>\n               </div>\n               <div className=\"row dateShowing\">\n                  <p className=\"magleft startDate\">{moment(modal.startDate).format('MM-DD-YYYY')}</p> \n                  <p className=\"magleft showPostedOn\">{moment(modal.postedOn).format('MM-DD-YYYY')}</p>\n                  <p className=\"magleft showLastDate\">{moment(modal.lastDate).format('MM-DD-YYYY')}</p>\n                </div>\n \n               <p className=\"modaldesc\">Description:{modal.description}</p>\n                 </div>\n               </Fade>\n             </Modal>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}