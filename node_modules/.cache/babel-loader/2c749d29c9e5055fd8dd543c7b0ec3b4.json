{"ast":null,"code":"import Swal from 'sweetalert2/dist/sweetalert2.js';\nimport 'sweetalert2/src/sweetalert2.scss';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { MAIN_URL } from '../config/employerConfig';\nexport const handledetails = data => {\n  console.log(data);\n\n  const redirectTocompanyDetailssuccess = () => {\n    Swal.fire({\n      title: 'JobBuzz',\n      text: \"Data updated Succesfully!\",\n      type: 'success',\n      allowOutsideClick: false,\n      confirmButtonText: 'ok!'\n    }).then(result => {\n      if (result.value) {\n        window.location.href = \"/postjob\";\n      }\n    });\n  };\n\n  const redirectTocompanyDetailsfailure = () => {\n    Swal.fire({\n      title: 'JobBuzz',\n      text: \"User profile updated successfully!\",\n      type: 'warning',\n      allowOutsideClick: false,\n      confirmButtonText: 'ok!'\n    }).then(result => {\n      if (result.value) {\n        window.location.href = \"/platform\";\n      }\n    });\n  };\n\n  console.log();\n  fetch(\"\".concat(MAIN_URL, \"/companyDetails\"), {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      data\n    })\n  }).then(response => response.json()).then(responseJson => {\n    console.log(responseJson.status);\n\n    if (responseJson[0].status === \"success\") {\n      console.log(responseJson.result);\n      redirectTocompanyDetailssuccess();\n    }\n\n    if (responseJson[0].status === \"failure\") {\n      console.log(responseJson.result);\n      redirectTocompanyDetailsfailure();\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n};","map":{"version":3,"sources":["/home/cadrac/Desktop/R/jobzbuzz/src/services/employer/platformService.js"],"names":["Swal","MAIN_URL","handledetails","data","console","log","redirectTocompanyDetailssuccess","fire","title","text","type","allowOutsideClick","confirmButtonText","then","result","value","window","location","href","redirectTocompanyDetailsfailure","fetch","method","headers","body","JSON","stringify","response","json","responseJson","status","catch","error"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,iCAAjB;AACA,OAAO,kCAAP;AACA,OAAO,kCAAP;AACA,SAAQC,QAAR,QAAuB,0BAAvB;AAGA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAGJ,QAAMG,+BAA+B,GAAG,MAAM;AAC1CN,IAAAA,IAAI,CAACO,IAAL,CAAU;AACNC,MAAAA,KAAK,EAAE,SADD;AAENC,MAAAA,IAAI,EAAE,2BAFA;AAGNC,MAAAA,IAAI,EAAE,SAHA;AAINC,MAAAA,iBAAiB,EAAE,KAJb;AAKNC,MAAAA,iBAAiB,EAAE;AALb,KAAV,EAMKC,IANL,CAMWC,MAAD,IAAY;AAClB,UAAIA,MAAM,CAACC,KAAX,EAAkB;AACdC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,UAAvB;AACH;AACF,KAVH;AAYD,GAbH;;AAeE,QAAMC,+BAA+B,GAAG,MAAM;AAC5CnB,IAAAA,IAAI,CAACO,IAAL,CAAU;AACVC,MAAAA,KAAK,EAAE,SADG;AAEVC,MAAAA,IAAI,EAAE,oCAFI;AAGVC,MAAAA,IAAI,EAAE,SAHI;AAIVC,MAAAA,iBAAiB,EAAE,KAJT;AAKVC,MAAAA,iBAAiB,EAAE;AALT,KAAV,EAMCC,IAND,CAMOC,MAAD,IAAY;AAClB,UAAIA,MAAM,CAACC,KAAX,EAAkB;AACdC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,WAAvB;AACH;AACF,KAVC;AAWD,GAZD;;AAaFd,EAAAA,OAAO,CAACC,GAAR;AACIe,EAAAA,KAAK,WAAInB,QAAJ,sBAA8B;AAC/BoB,IAAAA,MAAM,EAAG,MADsB;AAE/BC,IAAAA,OAAO,EAAG;AACR,gBAAW,kBADH;AAER,sBAAiB;AAFT,KAFqB;AAM/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBtB,MAAAA;AADmB,KAAf;AANyB,GAA9B,CAAL,CASKU,IATL,CASWa,QAAD,IAAcA,QAAQ,CAACC,IAAT,EATxB,EAUGd,IAVH,CAUSe,YAAD,IAAkB;AACpBxB,IAAAA,OAAO,CAACC,GAAR,CAAYuB,YAAY,CAACC,MAAzB;;AACF,QAAGD,YAAY,CAAC,CAAD,CAAZ,CAAgBC,MAAhB,KAA2B,SAA9B,EAAwC;AACtCzB,MAAAA,OAAO,CAACC,GAAR,CAAYuB,YAAY,CAACd,MAAzB;AACAR,MAAAA,+BAA+B;AAChC;;AACD,QAAGsB,YAAY,CAAC,CAAD,CAAZ,CAAgBC,MAAhB,KAA2B,SAA9B,EAAwC;AACtCzB,MAAAA,OAAO,CAACC,GAAR,CAAYuB,YAAY,CAACd,MAAzB;AACAK,MAAAA,+BAA+B;AAChC;AACF,GApBH,EAoBKW,KApBL,CAoBYC,KAAD,IAAW;AAClB3B,IAAAA,OAAO,CAAC2B,KAAR,CAAcA,KAAd;AACD,GAtBH;AAwBH,CAzDM","sourcesContent":["import Swal from 'sweetalert2/dist/sweetalert2.js';\nimport 'sweetalert2/src/sweetalert2.scss';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {MAIN_URL} from '../config/employerConfig';\n\n\nexport const handledetails = (data) => {\n    console.log(data)\n\n   \nconst redirectTocompanyDetailssuccess = () => {\n    Swal.fire({\n        title: 'JobBuzz',\n        text: \"Data updated Succesfully!\",\n        type: 'success',\n        allowOutsideClick: false,\n        confirmButtonText: 'ok!'\n      }).then((result) => {\n        if (result.value) {\n            window.location.href = \"/postjob\";\n        }\n      })\n\n  }\n\n  const redirectTocompanyDetailsfailure = () => {\n    Swal.fire({\n    title: 'JobBuzz',\n    text: \"User profile updated successfully!\",\n    type: 'warning',\n    allowOutsideClick: false,\n    confirmButtonText: 'ok!'\n  }).then((result) => {\n    if (result.value) {\n        window.location.href = \"/platform\";\n    }\n  })\n  }\nconsole.log()\n    fetch(`${MAIN_URL}/companyDetails`,{  \n        method : 'POST',\n        headers : {\n          'Accept' : 'application/json',\n          'Content-Type' : 'application/json',\n        },\n        body: JSON.stringify({\n          data\n        })\n      }).then((response) => response.json())\n      .then((responseJson) => {\n          console.log(responseJson.status)\n        if(responseJson[0].status === \"success\"){\n          console.log(responseJson.result);\n          redirectTocompanyDetailssuccess()\n        }\n        if(responseJson[0].status === \"failure\"){\n          console.log(responseJson.result);\n          redirectTocompanyDetailsfailure();\n        }\n      }).catch((error) => {\n        console.error(error);\n      });\n      \n}\n\n"]},"metadata":{},"sourceType":"module"}