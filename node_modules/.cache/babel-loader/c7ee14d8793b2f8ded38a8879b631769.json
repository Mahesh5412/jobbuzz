{"ast":null,"code":"/*\n * Purpose : This page is for Login Services Api\n * Devlopers : Sai,Sethu,Neha\n */\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport \"sweetalert2/src/sweetalert2.scss\";\nimport { MAIN_URL } from \"../config/authConfig\";\nexport const handleLogin = (name, password) => {\n  const redirectToUserHome = () => {\n    window.location.href = \"/jobGuide\"; //    return (<Redirect to=\"/userHome\"/>);\n  };\n\n  const redirectToPlatform = () => {\n    window.location.href = \"/platform\"; //    return (<Redirect to=\"/userHome\"/>);\n  }; //fetching userLogin data\n\n\n  fetch(\"\".concat(MAIN_URL, \"/userLogin\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      name: name,\n      password: password\n    })\n  }).then(response => response.json()).then(responseJson => {\n    if (responseJson.result === \"success\") {\n      console.log(responseJson);\n\n      if (responseJson.data.role == \"employee\") {\n        const mobileToken = responseJson.data.mobileNumber;\n        const emailToken = responseJson.data.email;\n        const userId = responseJson.data.userId;\n        localStorage.setItem(\"jwtMobileToken\", mobileToken);\n        localStorage.setItem(\"jwtEmailToken\", emailToken);\n        localStorage.setItem(\"jwtUserToken\", userId);\n        localStorage.setItem(\"role\", \"employee\");\n        localStorage.setItem(\"isLogged\", true);\n        redirectToUserHome();\n      }\n\n      if (responseJson.data.role == \"employer\") {\n        const mobile = responseJson.data.mobileNumber;\n        const userId = responseJson.data.userId;\n        localStorage.setItem(\"Mobile\", mobile);\n        localStorage.setItem(\"UserId\", userId);\n        localStorage.setItem(\"isLogged\", true);\n        localStorage.setItem(\"role\", \"employer\");\n        redirectToPlatform();\n      }\n    }\n\n    if (responseJson.result === \"failure\") {\n      Swal.fire({\n        title: \"JobBuzz\",\n        text: \"Username or Password is invalid!\",\n        type: \"warning\",\n        allowOutsideClick: false,\n        confirmButtonText: \"ok!\"\n      }).then(result => {\n        if (result.value) {// For more information about handling dismissals please visit\n          // https://sweetalert2.github.io/#handling-dismissals\n        }\n      });\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n};\nexport default handleLogin;","map":{"version":3,"sources":["/home/cadrac/Desktop/R/jobzbuzz/src/services/auth/userLogin.js"],"names":["Swal","MAIN_URL","handleLogin","name","password","redirectToUserHome","window","location","href","redirectToPlatform","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseJson","result","console","log","data","role","mobileToken","mobileNumber","emailToken","email","userId","localStorage","setItem","mobile","fire","title","text","type","allowOutsideClick","confirmButtonText","value","catch","error"],"mappings":"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","sourcesContent":["/*\n * Purpose : This page is for Login Services Api\n * Devlopers : Sai,Sethu,Neha\n */\nimport Swal from \"sweetalert2/dist/sweetalert2.js\";\nimport \"sweetalert2/src/sweetalert2.scss\";\nimport { MAIN_URL } from \"../config/authConfig\";\nexport const handleLogin = (name, password) => {\n  const redirectToUserHome = () => {\n    window.location.href = \"/jobGuide\";\n    //    return (<Redirect to=\"/userHome\"/>);\n  };\n\n  const redirectToPlatform = () => {\n    window.location.href = \"/platform\";\n    //    return (<Redirect to=\"/userHome\"/>);\n  };\n\n  //fetching userLogin data\n  fetch(`${MAIN_URL}/userLogin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n\n    body: JSON.stringify({ name: name, password: password })\n  })\n    .then(response => response.json())\n    .then(responseJson => {\n      if (responseJson.result === \"success\") {\n        console.log(responseJson);\n        if (responseJson.data.role == \"employee\") {\n          const mobileToken = responseJson.data.mobileNumber;\n          const emailToken = responseJson.data.email;\n          const userId = responseJson.data.userId;\n          localStorage.setItem(\"jwtMobileToken\", mobileToken);\n          localStorage.setItem(\"jwtEmailToken\", emailToken);\n          localStorage.setItem(\"jwtUserToken\", userId);\n          localStorage.setItem(\"role\", \"employee\");\n          localStorage.setItem(\"isLogged\", true);\n          redirectToUserHome();\n        }\n        if (responseJson.data.role == \"employer\") {\n          const mobile = responseJson.data.mobileNumber;\n          const userId = responseJson.data.userId;\n          localStorage.setItem(\"Mobile\", mobile);\n          localStorage.setItem(\"UserId\", userId);\n          localStorage.setItem(\"isLogged\", true);\n          localStorage.setItem(\"role\", \"employer\");\n          redirectToPlatform();\n        }\n      }\n\n      if (responseJson.result === \"failure\") {\n        Swal.fire({\n          title: \"JobBuzz\",\n          text: \"Username or Password is invalid!\",\n          type: \"warning\",\n          allowOutsideClick: false,\n          confirmButtonText: \"ok!\"\n        }).then(result => {\n          if (result.value) {\n            // For more information about handling dismissals please visit\n            // https://sweetalert2.github.io/#handling-dismissals\n          }\n        });\n      }\n    })\n    .catch(error => {\n      console.error(error);\n    });\n};\n\nexport default handleLogin;\n"]},"metadata":{},"sourceType":"module"}